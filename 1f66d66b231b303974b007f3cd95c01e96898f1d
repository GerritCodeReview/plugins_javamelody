{
  "comments": [
    {
      "key": {
        "uuid": "6929000e_1bb95df8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-17T10:40:03Z",
      "side": 1,
      "message": "Can you elaborate what is the Test Plan here?\n\nTest Plan:\n\n* Test gerrit site with javamelody plugin with this patch included\n* Confirm that requests are now grouped \u003d\u003e how ?\n\n^^^I\u0027m not sure how to verify that. The rrd files are created in /tmp/jevemelody/_localhost/ directory.\n\nNot related to this change, but there is also this pending change to improve this: [1].\n\n* [1] https://gerrit-review.googlesource.com/#/c/plugins/javamelody/+/109374/",
      "revId": "1f66d66b231b303974b007f3cd95c01e96898f1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d2b987b9_ae44b7e5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-11-17T14:31:27Z",
      "side": 1,
      "message": "Test plan is:\n1. go to HTTP statistics with current version of plugin\n2. remove http* related files from javamelody storage (/tmp/javamelody)\n3. install new version of plugin\n4. see that new statistics are based on grouped endpoints\nTo save you the effort of doing it: https://photos.app.goo.gl/5m7XkXYe6WRgwbvi2\nfirst picture shows current javamelody output whereas second picture contains grouped stats\ne.g.\nchanges/1/revisions/XXXXX/review POST\nbecomes\nchanges/$/revisions/$/review POST\n\n\u003e Not related to this change, but there is also this pending change to improve this: [1].\n\u003e [1] https://gerrit-review.googlesource.com/#/c/plugins/javamelody/+/109374/\n\nThis is kind of a related - actually change from [1] would more likely expose the issue that I am describing as RRD files would become persistent (and now they are being removed when box is being restarted ;))",
      "parentUuid": "6929000e_1bb95df8",
      "revId": "1f66d66b231b303974b007f3cd95c01e96898f1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad362ce6_deadda5b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1011323
      },
      "writtenOn": "2017-11-17T16:31:42Z",
      "side": 1,
      "message": "Thanks for detailed answer. I was missing the rdd files in /tmp/javamelody/... according to aggregated pattern? Do you see those files?",
      "parentUuid": "d2b987b9_ae44b7e5",
      "revId": "1f66d66b231b303974b007f3cd95c01e96898f1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0753799e_90c2df09",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 18,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-11-20T09:46:47Z",
      "side": 1,
      "message": "It is not one-to-one match with endpoint with regards to name - they will all be named like http22367edfd7f7edfbfb91051805212bfdf79bf67a.rrd but there will be less files as a result of grouping (at least that is my understanding of the issue description ;)) but more importantly statistics would start meaning sth and one could start observing trends (instance gets slower or faster or...)",
      "parentUuid": "ad362ce6_deadda5b",
      "revId": "1f66d66b231b303974b007f3cd95c01e96898f1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bba9632d_0c42ce17",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/javamelody/GerritMonitoringFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-11-17T10:20:31Z",
      "side": 1,
      "message": "I think that using guava joiner would produce a nicer code here:\n\n  Joiner.on(\"|\").join(\n    \"(\\\\w+)~(.+)~I([0-9a-f]{40})\",\n    \"[0-9a-f]{64}\",\n    \"[0-9a-f]{40}\",\n    ...\n  );\n\nbut using a standard JDK API also has its own advantages. You can decide :-)",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 98,
        "endChar": 50
      },
      "revId": "1f66d66b231b303974b007f3cd95c01e96898f1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0939e712_28b8b436",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/javamelody/GerritMonitoringFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1025452
      },
      "writtenOn": "2017-11-17T10:29:17Z",
      "side": 1,
      "message": "I agree it is a little more concise with guava :) I am wondering why it was not done this way when it was implemented in Java8 :D\nAnyway regardless of being a little clumsier it matches the idea of using Java built in functions that I observe in Gerrit core too (e.g. JodaTime to JavaTime, etc..) so I will stick to that.",
      "parentUuid": "bba9632d_0c42ce17",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 98,
        "endChar": 50
      },
      "revId": "1f66d66b231b303974b007f3cd95c01e96898f1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f70ed28_079bcf69",
        "filename": "src/main/java/com/googlesource/gerrit/plugins/javamelody/GerritMonitoringFilter.java",
        "patchSetId": 5
      },
      "lineNbr": 98,
      "author": {
        "id": 1003873
      },
      "writtenOn": "2017-11-17T11:51:37Z",
      "side": 1,
      "message": "AFAIK, java time was modeled after joda time.\nActually, the joda time founder was a project lead of JSR310 :-)\nIt is no surprise that similarity there is much higher than Guava Joiner vs StringJoiner.",
      "parentUuid": "0939e712_28b8b436",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 98,
        "endChar": 50
      },
      "revId": "1f66d66b231b303974b007f3cd95c01e96898f1d",
      "serverId": "173816e5-2b9a-37c3-8a2e-48639d4f1153",
      "unresolved": true
    }
  ]
}